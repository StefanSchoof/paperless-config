# Docker Compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - "8000:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./inbox:/usr/src/paperless/consume
    env_file: docker-compose.env
    environment:
      - PAPERLESS_REDIS=redis://broker:6379
      - PAPERLESS_DBHOST
      - PAPERLESS_DBUSER
      - PAPERLESS_DBPASS
      - PAPERLESS_FILENAME_FORMAT={{ correspondent }}/{{ created_year }}/{{ title }}
    labels:
      - "com.centurylinklabs.watchtower.monitor-only=true"

  backup:
    build:
      context: .
      dockerfile: azcopy.dockerfile
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
    command:
      - /bin/sh
      - -c
      - |
        azcopy sync "/usr/src/paperless/data" "$AZURE_STORAGE_URL/paperless-data" --delete-destination=true
        azcopy sync "/usr/src/paperless/media" "$AZURE_STORAGE_URL/paperless-media" --delete-destination=true
    environment:
      - AZCOPY_AUTO_LOGIN_TYPE=SPN
      - AZCOPY_SPA_APPLICATION_ID
      - AZCOPY_SPA_CLIENT_SECRET
      - AZCOPY_TENANT_ID
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  backupdb:
    image: postgres:16
    volumes:
      - /mnt/usb:/mnt/usb
    command:
      - /bin/sh
      - -c
      - |
        if [ -f "/mnt/usb/usb" ]; then
          PGPASSWORD=$PAPERLESS_DBPASS pg_dump -U $PAPERLESS_DBUSER -h $PAPERLESS_DBHOST paperless --no-owner --no-privileges -v -f /mnt/usb/paperless.sql
        fi

  backupfiles:
    build:
      context: .
      dockerfile: rsync.dockerfile
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - /mnt/usb:/mnt/usb
    command:
      - /bin/sh
      - -c
      - |
        if [ -f "/mnt/usb/usb" ]; then
          rsync -av --delete /usr/src/paperless/data/ /mnt/usb/paperless-data
          echo backup data
          rsync -av --delete /usr/src/paperless/media/ /mnt/usb/paperless-media
          echo backup media
        fi

volumes:
  data:
    name: data
    driver_opts:
      type: "cifs"
      o: "username=paperless,password=$SHARE_PW,vers=3.0,noserverino,uid=1000,gid=1000"
      device: "//192.168.178.1/FRITZ.NAS/WD-ExtHDD1021-01/papperless-docker/data"
  media:
    name: media
    driver_opts:
      type: "cifs"
      o: "username=paperless,password=$SHARE_PW,vers=3.0,noserverino,uid=1000,gid=1000"
      device: "//192.168.178.1/FRITZ.NAS/WD-ExtHDD1021-01/papperless-docker/media"
  redisdata:
